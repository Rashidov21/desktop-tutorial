# Generated by Django 4.2.4 on 2023-10-20 04:53

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=256, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=256, verbose_name='last name')),
                ('email', models.EmailField(blank=True, error_messages={'error': 'Bunday email mavjud.'}, max_length=254, null=True, unique=True, verbose_name='email')),
                ('username', models.CharField(db_index=True, help_text='Majburiy. 30 yoki undan kam belgi. Faqat harflar, raqamlar va @/./+/-/_.', max_length=256, null=True, unique=True, verbose_name='username')),
                ('bio', models.TextField(blank=True, verbose_name='bio')),
                ('avatar', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format=None, keep_meta=True, null=True, quality=90, scale=None, size=[500, 500], upload_to='user/%Y/%m', verbose_name='avatar')),
                ('region', models.CharField(blank=True, choices=[('andijon', 'Andijon viloyati'), ('buxoro', 'Buxoro viloyati'), ('jizzax', 'Jizzax viloyati'), ('qashqadaryo', 'Qashqadaryo viloyati'), ('navoiy', 'Navoiy viloyati'), ('namangan', 'Namangan viloyati'), ('samarqand', 'Samarqand viloyati'), ('suxondaryo', 'Suxondaryo viloyati'), ('sirdaryo', 'Sirdaryo viloyati'), ('toshkent', 'Toshkent viloyati'), ('fargona', "Farg'ona viloyati"), ('xorazm', 'Xorazm viloyati'), ('qoraqalpoq', 'Qoraqalpog`iston Respublikasi')], max_length=256, verbose_name='region')),
                ('spec', models.CharField(blank=True, choices=[('FullStack dasturchi', 'FullStack dasturchi'), ('Front-End dasturchi', 'Front-End dasturchi'), ('Back-End dasturchi', 'Back-End dasturchi'), ('Mobile dasturchi', 'Mobile dasturchi'), ('UX/UI dizayner', 'UX/UI dizayner'), ('Grafik dizayner', 'Grafik dizayner'), ('QA muhandis', 'QA muhandis'), ("O'yin dasturchisi", "O'yin dasturchisi"), ('Tester', 'Tester'), ('HR menejer', 'HR menejer'), ('Proyekt menejer', 'Proyekt menejer'), ('Team Lead', 'Team Lead'), ('SEO mutaxasis', 'SEO mutaxasis'), ('Boshqa soha', 'Boshqa soha')], max_length=256, verbose_name='specialization')),
                ('true_solutions', models.PositiveIntegerField(default=0, verbose_name='true solutions')),
                ('question_count', models.PositiveIntegerField(default=0, verbose_name='question')),
                ('answers_count', models.PositiveIntegerField(default=0, verbose_name='answers')),
                ('facebook', models.CharField(blank=True, max_length=256, verbose_name='facebook')),
                ('instagram', models.CharField(blank=True, max_length=256, verbose_name='instagram')),
                ('telegram', models.CharField(blank=True, max_length=256, verbose_name='telegram')),
                ('linkedin', models.CharField(blank=True, max_length=256, verbose_name='linkedin')),
                ('github', models.CharField(blank=True, max_length=256, verbose_name='github')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('followers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
